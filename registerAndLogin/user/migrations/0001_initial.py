# Generated by Django 5.0.2 on 2025-05-01 07:57

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('knowledge_base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(max_length=30, verbose_name='用户名')),
                ('phone_number', models.CharField(max_length=15, unique=True, verbose_name='手机号码')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='邮箱地址')),
                ('bio', models.TextField(blank=True, max_length=500, null=True, verbose_name='个人简介')),
                ('avatar', models.URLField(blank=True, max_length=255, null=True, verbose_name='头像URL')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否活跃')),
                ('is_admin', models.BooleanField(default=False, verbose_name='是否为管理员')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='最后登录时间')),
                ('ban_reason', models.TextField(blank=True, max_length=500, null=True, verbose_name='封禁原因')),
                ('ban_until', models.DateTimeField(blank=True, null=True, verbose_name='封禁截止时间')),
                ('following', models.ManyToManyField(blank=True, related_name='followers', to=settings.AUTH_USER_MODEL, verbose_name='关注')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AbnormalBehavior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abnormal_time', models.DateTimeField(auto_now_add=True, verbose_name='异常时间')),
                ('abnormal_type', models.CharField(choices=[('frequent_login', '频繁登录'), ('suspicious_activity', '可疑操作'), ('content_violation', '内容违规'), ('spam', '垃圾信息'), ('other', '其他异常')], max_length=50, verbose_name='异常类型')),
                ('description', models.TextField(verbose_name='异常描述')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('is_handled', models.BooleanField(default=False, verbose_name='是否已处理')),
                ('handled_at', models.DateTimeField(blank=True, null=True, verbose_name='处理时间')),
                ('handled_notes', models.TextField(blank=True, null=True, verbose_name='处理意见')),
                ('handled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_behaviors', to=settings.AUTH_USER_MODEL, verbose_name='处理人')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abnormal_behaviors', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '异常行为记录',
                'verbose_name_plural': '异常行为记录',
                'ordering': ['-abnormal_time'],
            },
        ),
        migrations.CreateModel(
            name='AIAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='智能体名称')),
                ('description', models.TextField(verbose_name='描述')),
                ('status', models.CharField(choices=[('pending', '待审核'), ('approved', '已通过'), ('rejected', '已拒绝')], default='pending', max_length=20, verbose_name='审核状态')),
                ('review_notes', models.TextField(blank=True, null=True, verbose_name='审核意见')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_agents', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
            ],
            options={
                'verbose_name': '智能体',
                'verbose_name_plural': '智能体',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AgentReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decision', models.CharField(choices=[('approve', '通过'), ('reject', '拒绝')], max_length=20, verbose_name='审核决定')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='审核意见')),
                ('reviewed_at', models.DateTimeField(auto_now_add=True, verbose_name='审核时间')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_reviews', to=settings.AUTH_USER_MODEL, verbose_name='审核员')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='user.aiagent', verbose_name='智能体')),
            ],
            options={
                'verbose_name': '智能体审核记录',
                'verbose_name_plural': '智能体审核记录',
                'ordering': ['-reviewed_at'],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='公告标题')),
                ('content', models.TextField(verbose_name='公告内容')),
                ('is_pinned', models.BooleanField(default=False, verbose_name='是否置顶')),
                ('status', models.CharField(choices=[('draft', '草稿'), ('published', '已发布'), ('withdrawn', '已撤回')], default='draft', max_length=20, verbose_name='状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_announcements', to=settings.AUTH_USER_MODEL, verbose_name='发布者')),
            ],
            options={
                'verbose_name': '系统公告',
                'verbose_name_plural': '系统公告',
                'ordering': ['-is_pinned', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PublishedAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='智能体名称')),
                ('description', models.TextField(verbose_name='描述')),
                ('status', models.CharField(choices=[('pending', '待审核'), ('approved', '已通过'), ('rejected', '已拒绝')], default='pending', max_length=20, verbose_name='审核状态')),
                ('review_notes', models.TextField(blank=True, null=True, verbose_name='审核意见')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('model_id', models.CharField(default='模型999', max_length=100, verbose_name='模型ID')),
                ('workflow_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='工作流ID')),
                ('views', models.IntegerField(default=0, verbose_name='浏览量')),
                ('likes', models.IntegerField(default=0, verbose_name='点赞数')),
                ('comments', models.IntegerField(default=0, verbose_name='评论数')),
                ('avatar', models.CharField(blank=True, max_length=255, null=True, verbose_name='头像URL')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_agents', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('knowledge_bases', models.ManyToManyField(blank=True, to='knowledge_base.knowledgebase', verbose_name='知识库')),
            ],
            options={
                'verbose_name': '已发布智能体',
                'verbose_name_plural': '已发布智能体',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('login', '登录'), ('logout', '登出'), ('create_agent', '创建智能体'), ('edit_agent', '编辑智能体'), ('delete_agent', '删除智能体'), ('post', '发帖'), ('delete_post', '删除帖'), ('edit_agent', '编辑智能体'), ('delete_agent', '删除智能体'), ('follow', '关注用户'), ('unfollow', '取消关注')], max_length=50, verbose_name='行为类型')),
                ('target_id', models.IntegerField(blank=True, null=True, verbose_name='目标ID')),
                ('target_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='目标类型')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户行为日志',
                'verbose_name_plural': '用户行为日志',
                'ordering': ['-created_at'],
            },
        ),
    ]
